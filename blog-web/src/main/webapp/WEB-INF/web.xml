<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>Archetype Created Web Application</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:local/spring-*.xml</param-value>
    </context-param>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webApp.root</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:local/log4j.properties</param-value>
    </context-param>

    <!--  -过滤器配置 -->
    <!--例:编码过滤器-->
    <filter>      <!-- 用来声明filter的相关设定,过滤器可以截取和修改一个Servlet或JSP页面的请求或从一个Servlet或JSP页面发出的响应-->
        <filter-name>encodingFilter</filter-name>     <!--指定filter的名字-->
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <!--定义filter的类的名称-->
        <async-supported>true</async-supported>     <!--设置是否启用异步支持-->
        <init-param><!--用来定义参数,若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param-name里面的值");-->
            <param-name>encoding</param-name>   <!--参数名称-->
            <param-value>UTF-8</param-value> <!--参数值-->
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping><!--用来定义filter所对应的URL-->
        <filter-name>encodingFilter</filter-name>     <!--指定对应filter的名字-->
        <url-pattern>/*</url-pattern>       <!--指定filter所对应的URL-->
    </filter-mapping>

    <!--自定义请求返回值拦截器-->
    <filter>
        <filter-name>responseFilter</filter-name>
        <filter-class>com.yequan.common.filter.ResponseFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>responseFilter</filter-name>
        <url-pattern>/user/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>responseFilter</filter-name>
        <url-pattern>/register/*</url-pattern>
    </filter-mapping>

    <!--shiro过滤器-->
    <!--    <filter>-->
    <!--        <filter-name>shiroFilter</filter-name>-->
    <!--        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--        &lt;!&ndash;设置url由servlet容器控制filter生命周期&ndash;&gt;-->
    <!--        <init-param>-->
    <!--            <param-name>transformWsdlLocations</param-name>-->
    <!--            <param-value>true</param-value>-->
    <!--        </init-param>-->
    <!--    </filter>-->
    <!--    <filter-mapping>-->
    <!--        <filter-name>shiroFilter</filter-name>-->
    <!--        <url-pattern>/*</url-pattern>-->
    <!--    </filter-mapping>-->

    <!-- -监听器配置 -->
    <!--例:spring监听器-->
    <listener>        <!--用来设定Listener接口-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称-->
    </listener>
    <!-- 防止Spring内存溢出监听器  -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!--servlet配置 -->
    <servlet>     <!--用来声明一个servlet的数据 -->
        <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--指定servlet的类名称,这里配置了前端控制器-->
        <init-param><!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数    -->
            <param-name>contextConfigLocation</param-name>  <!--参数名称-->
            <param-value>classpath:local/spring-mvc.xml</param-value> <!--参数值-->
        </init-param>
        <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->
        <async-supported>true</async-supported><!--设置是否启用异步支持-->
    </servlet>
    <servlet-mapping><!--用来定义servlet所对应的URL-->
        <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称-->
        <url-pattern>/</url-pattern>        <!--指定servlet所对应的URL-->
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

</web-app>
