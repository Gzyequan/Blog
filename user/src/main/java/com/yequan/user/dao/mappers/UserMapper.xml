<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yequan.user.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.yequan.user.pojo.UserDO">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="realname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="age" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="mobilephone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="birthday" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, nickname, realname, age, mobilephone, address, birthday,password,status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByMobilephone" parameterType="com.yequan.user.pojo.UserDTO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        mobilephone = #{mobilephone,jdbcType=VARCHAR}
    </select>
    <select id="loginCheck" resultMap="BaseResultMap" parameterType="com.yequan.user.pojo.UserDTO">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        mobilephone = #{mobilephone,jdbcType=VARCHAR}
        and
        password = #{password,jdbcType=VARCHAR}
    </select>
    <select id="selectUserList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        order by id asc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.yequan.user.pojo.UserDO">
    insert into user (id, nickname, realname,
      age, mobilephone, address, birthday,password)
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{mobilephone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{birthday,jdbcType=TIMESTAMP},#{password,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.yequan.user.pojo.UserDO">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="mobilephone != null">
                mobilephone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="mobilephone != null">
                #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yequan.user.pojo.UserDO">
        update user
        <set>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="mobilephone != null">
                mobilephone = #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yequan.user.pojo.UserDO">
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      mobilephone = #{mobilephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>